{
  "$id": "https://platformatic.dev/schemas/v0.17.1/db",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "server": {
      "type": "object",
      "properties": {
        "hostname": {
          "type": "string"
        },
        "port": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            }
          ]
        },
        "pluginTimeout": {
          "type": "integer"
        },
        "healthCheck": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "interval": {
                  "type": "integer"
                }
              },
              "additionalProperties": true
            }
          ]
        },
        "cors": {
          "type": "object",
          "$comment": "See https://github.com/fastify/fastify-cors",
          "properties": {
            "origin": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "regexp": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "regexp"
                        ]
                      }
                    ]
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "regexp": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "regexp"
                  ]
                }
              ]
            },
            "methods": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "allowedHeaders": {
              "type": "string",
              "description": "Comma separated string of allowed headers."
            },
            "exposedHeaders": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "description": "Comma separated string of exposed headers."
                }
              ]
            },
            "credentials": {
              "type": "boolean"
            },
            "maxAge": {
              "type": "integer"
            },
            "preflightContinue": {
              "type": "boolean",
              "default": false
            },
            "optionsSuccessStatus": {
              "type": "integer",
              "default": 204
            },
            "preflight": {
              "type": "boolean",
              "default": true
            },
            "strictPreflight": {
              "type": "boolean",
              "default": true
            },
            "hideOptionsRoute": {
              "type": "boolean",
              "default": true
            }
          },
          "additionalProperties": false
        }
      },
      "required": [
        "hostname",
        "port"
      ]
    },
    "core": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "string"
        },
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "poolSize": {
          "type": "integer"
        },
        "autoTimestamp": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "createdAt": {
                  "type": "string",
                  "default": "created_at"
                },
                "updatedAt": {
                  "type": "string",
                  "default": "updated_at"
                }
              }
            },
            {
              "type": "boolean"
            }
          ]
        },
        "graphql": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "properties": {
                "graphiql": {
                  "type": "boolean"
                },
                "ignore": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "subscriptionIgnore": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "schema": {
                  "type": "string"
                },
                "schemaPath": {
                  "type": "string"
                }
              }
            }
          ]
        },
        "openapi": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "properties": {
                "info": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    }
                  }
                },
                "prefix": {
                  "type": "string",
                  "description": "Base URL for the OpenAPI"
                },
                "ignore": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "boolean"
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "ignore": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "limit": {
          "type": "object",
          "properties": {
            "default": {
              "type": "integer",
              "default": 10
            },
            "max": {
              "type": "integer",
              "default": 100
            }
          }
        },
        "events": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "properties": {
                "connectionString": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          ]
        }
      },
      "required": [
        "connectionString"
      ]
    },
    "dashboard": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "type": "object",
          "properties": {
            "path": {
              "type": "string",
              "description": "The path where the dashboard should be served."
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "authorization": {
      "type": "object",
      "properties": {
        "adminSecret": {
          "type": "string",
          "description": "The password should be used to login dashboard and to access routes under /_admin prefix and for admin access to REST and GraphQL endpoints with X-PLATFORMATIC-ADMIN-SECRET header."
        },
        "roleKey": {
          "type": "string",
          "description": "The user metadata key to store user roles",
          "default": "X-PLATFORMATIC-ROLE"
        },
        "anonymousRole": {
          "type": "string",
          "description": "The role name for anonymous users",
          "default": "anonymous"
        },
        "jwt": {
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "secret": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "the shared secret for JWT"
                },
                {
                  "type": "object",
                  "description": "the JWT secret configuration (see: https://github.com/fastify/fastify-jwt#secret-required)",
                  "additionalProperties": true
                }
              ]
            },
            "namespace": {
              "type": "string",
              "description": "the namespace for JWT custom claims"
            },
            "jwks": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "object",
                  "additionalProperties": true
                }
              ]
            }
          }
        },
        "webhook": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "the webhook url"
            }
          },
          "additionalProperties": false
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "entity": {
                    "type": "string",
                    "description": "the DB entity type to which the rule applies"
                  },
                  "role": {
                    "type": "string",
                    "description": "the role name to match the rule"
                  },
                  "defaults": {
                    "type": "object",
                    "description": "defaults for entity creation",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "find": {
                    "$ref": "#crud-operation-auth"
                  },
                  "save": {
                    "$ref": "#crud-operation-auth"
                  },
                  "delete": {
                    "$ref": "#crud-operation-auth"
                  }
                },
                "required": [
                  "role"
                ],
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "entities": {
                    "type": "array",
                    "description": "the DB entity types to which the rule applies",
                    "items": {
                      "type": "string"
                    }
                  },
                  "role": {
                    "type": "string",
                    "description": "the role name to match the rule"
                  },
                  "defaults": {
                    "type": "object",
                    "description": "defaults for entity creation",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "find": {
                    "$ref": "#crud-operation-auth"
                  },
                  "save": {
                    "$ref": "#crud-operation-auth"
                  },
                  "delete": {
                    "$ref": "#crud-operation-auth"
                  }
                },
                "required": [
                  "role"
                ],
                "additionalProperties": false
              }
            ]
          }
        }
      },
      "additionalProperties": false,
      "$defs": {
        "crudOperationAuth": {
          "$id": "#crud-operation-auth",
          "oneOf": [
            {
              "type": "object",
              "description": "CRUD operation authorization config",
              "properties": {
                "checks": {
                  "description": "checks for the operation",
                  "type": "object",
                  "additionalProperties": {
                    "if": {
                      "type": "object"
                    },
                    "then": {
                      "type": "object",
                      "properties": {
                        "eq": {
                          "type": "string"
                        },
                        "in": {
                          "type": "string"
                        },
                        "nin": {
                          "type": "string"
                        },
                        "nen": {
                          "type": "string"
                        },
                        "gt": {
                          "type": "string"
                        },
                        "gte": {
                          "type": "string"
                        },
                        "lt": {
                          "type": "string"
                        },
                        "lte": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "else": {
                      "type": "string"
                    }
                  }
                },
                "fields": {
                  "type": "array",
                  "description": "array of enabled field for the operation",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            {
              "type": "boolean",
              "description": "true if enabled (with not authorization constraints enabled)"
            }
          ]
        }
      }
    },
    "migrations": {
      "type": "object",
      "properties": {
        "dir": {
          "type": "string",
          "description": "The path to the directory containing the migrations."
        },
        "table": {
          "type": "string"
        },
        "validateChecksums": {
          "type": "boolean"
        },
        "autoApply": {
          "type": "boolean",
          "description": "Whether to automatically apply migrations when running the migrate command."
        }
      },
      "additionalProperties": false,
      "required": [
        "dir"
      ]
    },
    "metrics": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "type": "object",
          "properties": {
            "port": {
              "type": "integer"
            },
            "hostname": {
              "type": "string"
            },
            "auth": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "required": [
                "username",
                "password"
              ]
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "types": {
      "type": "object",
      "properties": {
        "autogenerate": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "plugins": {
      "$id": "#plugins",
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string"
                  },
                  "options": {
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            ]
          }
        },
        "stopTimeout": {
          "type": "integer"
        },
        "typescript": {
          "type": "boolean"
        },
        "fallback": {
          "type": "boolean"
        },
        "hotReload": {
          "type": "boolean",
          "default": true
        }
      },
      "additionalProperties": false,
      "required": [
        "paths"
      ]
    }
  },
  "additionalProperties": {
    "watch": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "type": "object",
            "properties": {
              "allow": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1,
                "nullable": true,
                "default": null
              },
              "ignore": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true,
                "default": null
              }
            },
            "additionalProperties": false
          }
        },
        {
          "type": "boolean"
        }
      ]
    }
  },
  "required": [
    "core",
    "server"
  ]
}
